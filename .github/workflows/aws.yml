# .github/workflows/deploy.yml

name: Build, Push to ECR, and Deploy Microservice

on:
  push:
    branches:
      - master # o 'main'

env:
  # --- Configuración de AWS (Apunta a tu NUEVA cuenta) ---
  AWS_REGION: us-east-1
  ECR_REGISTRY: 614520203803.dkr.ecr.us-east-1.amazonaws.com

  # ▼▼▼ ¡ACCIÓN REQUERIDA! Cambia estos dos valores para cada microservicio ▼▼▼
  ECR_REPOSITORY: support-app                # Para neuroIA: neuroia-app | Para support: support-app
  DOCKER_COMPOSE_SERVICE_NAME: support-app    # Para neuroIA: neuroia-app | Para support: support-app

  # --- Configuración de EC2 (Usa los secretos de GitHub) ---
  EC2_HOST: ${{ secrets.EC2_HOST_IP }}
  EC2_USER: ec2-user

  # --- Configuración de CodeArtifact (Apunta a tu NUEVA cuenta) ---
  CODEARTIFACT_DOMAIN: pillihuamanlib
  CODEARTIFACT_OWNER_ID: 614520203803

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image to ECR
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain ${{ env.CODEARTIFACT_DOMAIN }} --domain-owner ${{ env.CODEARTIFACT_OWNER_ID }} --query authorizationToken --output text)
          docker build \
            --build-arg CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/mi-plataforma
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            docker-compose pull ${{ env.DOCKER_COMPOSE_SERVICE_NAME }}
            docker-compose up -d --no-deps ${{ env.DOCKER_COMPOSE_SERVICE_NAME }}
            docker image prune -f